name: Tagged Release

on: 
  push:
    tags:
      - "v*"
  workflow_dispatch:

env:
  SUMMARY: >
    Provides definitions for Total War games Lua API: types, static objects, functions, etc.
  LICENSE: "MIT"
  FILES_TO_CHECK: >-
    .
  GIT_AUTHOR_NAME: "github-actions[bot]"
  GIT_AUTHOR_EMAIL: "41898282+github-actions[bot]@users.noreply.github.com"
  GIT_COMMITTER_NAME: "github-actions[bot]"
  GIT_COMMITTER_EMAIL: "41898282+github-actions[bot]@users.noreply.github.com"
  LUACHECK_CONFIG: ".luacheckrc"
  LUA_VERSION: "5.1"
  LUAROCKS_VERSION: "3.7.0"


jobs:

  lint-and-update:
    runs-on: ubuntu-latest
    outputs:
      clean: ${{ steps.changes.outputs.clean }}
      files: ${{ steps.changes.outputs.files }}

    steps:
    - uses: actions/checkout@v2
      with:
        persist-credentials: false
        fetch-depth: 0

    - uses: leafo/gh-actions-lua@v8.0.0
      with:
        luaVersion: ${{ env.LUA_VERSION }}
        
    - uses: leafo/gh-actions-luarocks@v4.1.0
      with:
        luarocksVersion: ${{ env.LUAROCKS_VERSION }}
        
    - name: Install luacheck
      run: luarocks install luacheck

    - name: Luacheck Lint
      id: luacheck
      shell: bash --noprofile --norc {0}
      run: |
        echo "::add-matcher::.github/luacheck-plain.json"
        luacheck ${{ env.FILES_TO_CHECK }} \
          --formatter plain \
          --codes --ranges \
          --config ${{ env.LUACHECK_CONFIG }}
        exitcode=$?
        echo "::remove-matcher owner=luacheck-plain_error::"
        echo "::remove-matcher owner=luacheck-plain_warning::"
        if [ "$exitcode" -gt 1 ]; then
          exit $exitcode;
        else
          exit 0;
        fi

    - name: Update rockspec
      run: |
        rm -f *.rockspec
        luarocks write_rockspec \
          --tag=${GITHUB_REF##*/} \
          --lua-versions="${{ env.LUA_VERSION }}" \
          --license="${{ env.LICENSE }}" \
          --summary="${{ env.SUMMARY }}"

    - name: Get file changes
      id: changes
      run: |
        changes="$(git status --porcelain=2 *.rockspec)"
        echo "::debug::${changes}"
        if [ -z "${changes}" ]; then
          echo "::set-output name=clean::true"
        else
          files=()
          changes_tracked="$(git status --porcelain=1 --untracked-files=no *.rockspec)"
          og_IFS=$IFS
          IFS='\n'
          for line in "${changes_tracked}"; do
            file=$(cut -d" " -f2 <<< ${line})
            files+=("${file}")
            echo "::notice file=${file}::File changed: ${file}"
            echo "::debug::$(git diff ${file})"
          done
          changes_untracked="$(git ls-files --others --exclude-standard *.rockspec)"
          for file in "${changes_untracked}"; do
            files+=("${file}")
            echo "::notice file=${file}::New file: ${file}"
            echo "::debug::$(git diff ${file})"
          done
          IFS=$og_IFS
          echo "::group::Total files changed"
          for file in ${files[@]}; do
            echo "${file}"
          done
          echo "::endgroup::"
          echo "::notice::clean: false"
          echo "::set-output name=files::${files[@]}"
          echo "::set-output name=clean::false"
        fi

    - name: Upload updated files
      if: steps.changes.outputs.clean == 'false'
      uses: actions/upload-artifact@v2
      with:
        name: rockspec
        path: ${{ steps.changes.outputs.files }}

  release:
    runs-on: ubuntu-latest
    needs: lint-and-update
    if: needs.lint-and-update.outputs.clean == 'false'

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Remove existing rockspec
      run: rm -f *.rockspec

    - name: Download updated files
      uses: actions/download-artifact@v2
      with:
        name: rockspec

    - name: Commit files
      id: commit
      run: |
        tag_message="$(git tag -l --format='%(contents)' ${GITHUB_REF##*/})"
        branch=$(git branch --show-current)
        echo "::set-output name=branch::${branch}"
        git config --local user.email ${{ env.GIT_AUTHOR_EMAIL }}
        git config --local user.name ${{ env.GIT_AUTHOR_NAME }}
        git add ${{ needs.lint-and-update.outputs.files }}
        git commit -m "[Luarocks] Update rockspec"
        if ${{ startsWith(github.ref, 'refs/tags/') }}; then
          git tag -a "release/${GITHUB_REF##*/}" -m "${tag_message}"
        fi

    - name: Push changes
      uses: ad-m/github-push-action@master
      with:
        github_token: ${{ secrets.BOT_TOKEN }}
        branch: ${{ steps.commit.outputs.branch }}
        tags: true
        force: true

    - name: Release
      id: release
      uses: "marvinpinto/action-automatic-releases@v1.2.1"
      with:
        repo_token: "${{ secrets.GITHUB_TOKEN }}"
        prerelease: false
